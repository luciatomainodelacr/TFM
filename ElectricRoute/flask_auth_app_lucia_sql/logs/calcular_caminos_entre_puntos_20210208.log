[2021-02-08 19:57:19,795] [INFO    ][OK] Llamada al script calcular_caminos_entre_puntos.py [OK]
[2021-02-08 19:57:19,795] [INFO    ]El programa lanzado es: ALL VOLKSWAGEN ID3 PURE Alicante Tren A Corunia Bus 90 10  INFO /home/tfm/Documentos/TFM/ElectricRoute/flask_auth_app_lucia_sql/logs/
[2021-02-08 19:57:19,795] [INFO    ]1.- Carga de inputs desde Base de Datos
[2021-02-08 19:57:19,796] [INFO    ]Crear conexion a DB
[2021-02-08 19:57:19,819] [INFO    ]Query a PuntosCarga
[2021-02-08 19:57:19,952] [INFO    ]Query a GasolinerasPropuesta
[2021-02-08 19:57:20,049] [INFO    ]Query a Ciudades
[2021-02-08 19:57:20,119] [INFO    ]Query a ElectriCar
[2021-02-08 19:57:20,185] [INFO    ]Query a Matriz_distancia_haversine
[2021-02-08 19:57:23,680] [INFO    ]Query a Matriz_distancia_haversine completo
[2021-02-08 19:57:40,929] [INFO    ]Cerrar conexion con DB
[2021-02-08 19:57:40,930] [INFO    ]2.- Aplicar las restricciones
[2021-02-08 19:57:40,930] [INFO    ]a) Si no se especifica tipo de conector, no se aplica restriccion
[2021-02-08 19:57:40,930] [INFO    ]b) Restriccion de primera parada
[2021-02-08 19:57:40,994] [INFO    ]c) Restriccion de ultima parada
[2021-02-08 19:57:41,032] [INFO    ]Se genera el dataframe reducido que cumple con todas las restricciones
[2021-02-08 19:57:41,640] [INFO    ]df_distancias (105952, 3)
[2021-02-08 19:57:41,641] [INFO    ]df_distancias_reduced (105918, 5)
[2021-02-08 19:57:41,641] [INFO    ]3.- Calcular tiempos (de recorrido y parada)
[2021-02-08 19:57:41,641] [INFO    ]a) Tiempo de recorrido
[2021-02-08 19:57:41,645] [INFO    ]b) Tiempo de parada
[2021-02-08 19:57:41,645] [INFO    ]Filtro las distancias menores o iguales de 50 km entre las CIUDADES IMPORTANTES y el resto de coordenadas
[2021-02-08 19:57:44,178] [INFO    ]Calculo tiempo de parada para puntos de recarga
[2021-02-08 19:57:44,303] [INFO    ]Se genera el dataframe reducido con columna basada en Suma_time_parada_h
[2021-02-08 19:57:44,375] [INFO    ]4.- Construir el grafo
[2021-02-08 19:58:01,895] [INFO    ]5.- Calculo rutas optimas
[2021-02-08 19:58:02,095] [INFO    ]La ruta optima es: ['Alicante Tren', 'punto_recarga_69', 'punto_recarga_187', 'punto_recarga_249', 'punto_recarga_259', 'punto_recarga_282', 'A Corunia Bus']
[2021-02-08 19:58:02,138] [INFO    ]Tiempo de parada en Alicante Tren es 0.0 h
[2021-02-08 19:58:02,138] [INFO    ]Tiempo total del tramo Alicante Tren - punto_recarga_69 es 0.6186468940479464 h
[2021-02-08 19:58:02,181] [INFO    ]Tiempo de parada en punto_recarga_69 es 0.0 h
[2021-02-08 19:58:02,181] [INFO    ]Tiempo total del tramo punto_recarga_69 - punto_recarga_187 es 2.0054659254923415 h
[2021-02-08 19:58:02,224] [INFO    ]Tiempo de parada en punto_recarga_187 es 0.6305555555555555 h
[2021-02-08 19:58:02,224] [INFO    ]Tiempo total del tramo punto_recarga_187 - punto_recarga_249 es 2.5960537498511616 h
[2021-02-08 19:58:02,265] [INFO    ]Tiempo de parada en punto_recarga_249 es 0.472979797979798 h
[2021-02-08 19:58:02,266] [INFO    ]Tiempo total del tramo punto_recarga_249 - punto_recarga_259 es 1.1877924982224164 h
[2021-02-08 19:58:02,306] [INFO    ]Tiempo de parada en punto_recarga_259 es 0.472979797979798 h
[2021-02-08 19:58:02,306] [INFO    ]Tiempo total del tramo punto_recarga_259 - punto_recarga_282 es 2.6794833511800187 h
[2021-02-08 19:58:02,347] [INFO    ]Tiempo de parada en punto_recarga_282 es 1.011090909090909 h
[2021-02-08 19:58:02,347] [INFO    ]Tiempo total del tramo punto_recarga_282 - A Corunia Bus es 2.6242619351819103 h
[2021-02-08 19:58:02,347] [INFO    ]El tiempo total tardado es: 11.711704353975794 h
[2021-02-08 19:58:02,557] [INFO    ]6.- Carga de outputs a Base de Datos
[2021-02-08 19:58:02,558] [INFO    ]Crear conexion a DB
[2021-02-08 19:58:02,561] [INFO    ]Query a Output
[2021-02-08 19:58:02,674] [INFO    ]1 registros insertados.
[2021-02-08 19:58:02,674] [INFO    ]Cerrar conexion con DB
[2021-02-08 19:58:02,675] [INFO    ][OK] Final del script calcular_caminos_entre_puntos.py [OK]
[2021-02-08 19:58:02,754] [INFO    ]127.0.0.1 - - [08/Feb/2021 19:58:02] "[37mGET /ruta_test HTTP/1.1[0m" 200 -
[2021-02-08 19:58:02,811] [INFO    ]127.0.0.1 - - [08/Feb/2021 19:58:02] "[36mGET /static/vendor/jquery-easing/jquery.easing.min.js HTTP/1.1[0m" 304 -
[2021-02-08 19:58:02,817] [INFO    ]127.0.0.1 - - [08/Feb/2021 19:58:02] "[36mGET /static/vendor/bootstrap/js/bootstrap.bundle.min.js HTTP/1.1[0m" 304 -
[2021-02-08 19:58:02,829] [INFO    ]127.0.0.1 - - [08/Feb/2021 19:58:02] "[36mGET /static/vendor/jquery/jquery.min.js HTTP/1.1[0m" 304 -
[2021-02-08 19:58:02,833] [INFO    ]127.0.0.1 - - [08/Feb/2021 19:58:02] "[36mGET /static/js/sb-admin-2.min.js HTTP/1.1[0m" 304 -
[2021-02-08 19:58:02,836] [INFO    ]127.0.0.1 - - [08/Feb/2021 19:58:02] "[36mGET /static/dist/leaflet-routing-machine.js HTTP/1.1[0m" 304 -
[2021-02-08 20:12:32,515] [INFO    ] * Detected change in '/home/tfm/Documentos/TFM/ElectricRoute/flask_auth_app_lucia_sql/project/main.py', reloading
[2021-02-08 20:26:53,368] [INFO    ][OK] Llamada al script calcular_caminos_entre_puntos.py [OK]
[2021-02-08 20:26:53,369] [INFO    ]El programa lanzado es: ALL TESLA ROADSTER Alicante Tren Burgos Tren 90 10  INFO /home/tfm/Documentos/TFM/ElectricRoute/flask_auth_app_lucia_sql/logs/
[2021-02-08 20:26:53,369] [INFO    ]1.- Carga de inputs desde Base de Datos
[2021-02-08 20:26:53,370] [INFO    ]Crear conexion a DB
[2021-02-08 20:26:53,375] [INFO    ]Query a PuntosCarga
[2021-02-08 20:26:53,407] [INFO    ]Query a GasolinerasPropuesta
[2021-02-08 20:26:53,438] [INFO    ]Query a Ciudades
[2021-02-08 20:26:53,450] [INFO    ]Query a ElectriCar
[2021-02-08 20:26:53,455] [INFO    ]Query a Matriz_distancia_haversine
[2021-02-08 20:27:01,009] [INFO    ][OK] Llamada al script calcular_caminos_entre_puntos.py [OK]
[2021-02-08 20:27:01,009] [INFO    ]El programa lanzado es: ALL TESLA ROADSTER A Corunia Tren Badajoz Bus 90 10  INFO /home/tfm/Documentos/TFM/ElectricRoute/flask_auth_app_lucia_sql/logs/
[2021-02-08 20:27:01,009] [INFO    ]1.- Carga de inputs desde Base de Datos
[2021-02-08 20:27:01,010] [INFO    ]Crear conexion a DB
[2021-02-08 20:27:01,015] [INFO    ]Query a PuntosCarga
[2021-02-08 20:27:01,086] [INFO    ]Query a GasolinerasPropuesta
[2021-02-08 20:27:01,666] [INFO    ]Query a Ciudades
[2021-02-08 20:27:01,687] [INFO    ]Query a ElectriCar
[2021-02-08 20:27:01,702] [INFO    ]Query a Matriz_distancia_haversine
[2021-02-08 20:27:09,717] [INFO    ]Query a Matriz_distancia_haversine completo
[2021-02-08 20:27:21,969] [INFO    ] * Detected change in '/home/tfm/Documentos/TFM/ElectricRoute/flask_auth_app_lucia_sql/project/main.py', reloading
[2021-02-08 20:27:34,510] [INFO    ][OK] Llamada al script calcular_caminos_entre_puntos.py [OK]
[2021-02-08 20:27:34,511] [INFO    ]El programa lanzado es: ALL TESLA ROADSTER Alicante Tren A Corunia Bus 90 10  INFO /home/tfm/Documentos/TFM/ElectricRoute/flask_auth_app_lucia_sql/logs/
[2021-02-08 20:27:34,511] [INFO    ]1.- Carga de inputs desde Base de Datos
[2021-02-08 20:27:34,511] [INFO    ]Crear conexion a DB
[2021-02-08 20:27:34,514] [INFO    ]Query a PuntosCarga
[2021-02-08 20:27:34,547] [INFO    ]Query a GasolinerasPropuesta
[2021-02-08 20:27:34,576] [INFO    ]Query a Ciudades
[2021-02-08 20:27:34,586] [INFO    ]Query a ElectriCar
[2021-02-08 20:27:34,590] [INFO    ]Query a Matriz_distancia_haversine
[2021-02-08 20:27:49,234] [INFO    ]Query a Matriz_distancia_haversine completo
[2021-02-08 20:28:08,971] [INFO    ]Cerrar conexion con DB
[2021-02-08 20:28:08,972] [INFO    ]2.- Aplicar las restricciones
[2021-02-08 20:28:08,972] [INFO    ]a) Si no se especifica tipo de conector, no se aplica restriccion
[2021-02-08 20:28:08,972] [INFO    ]b) Restriccion de primera parada
[2021-02-08 20:28:09,163] [INFO    ]c) Restriccion de ultima parada
[2021-02-08 20:28:09,348] [INFO    ]Se genera el dataframe reducido que cumple con todas las restricciones
[2021-02-08 20:28:10,536] [INFO    ]df_distancias (461201, 3)
[2021-02-08 20:28:10,537] [INFO    ]df_distancias_reduced (460927, 5)
[2021-02-08 20:28:10,537] [INFO    ]3.- Calcular tiempos (de recorrido y parada)
[2021-02-08 20:28:10,537] [INFO    ]a) Tiempo de recorrido
[2021-02-08 20:28:10,541] [INFO    ]b) Tiempo de parada
[2021-02-08 20:28:10,541] [INFO    ]Filtro las distancias menores o iguales de 50 km entre las CIUDADES IMPORTANTES y el resto de coordenadas
[2021-02-08 20:28:13,164] [INFO    ]Calculo tiempo de parada para puntos de recarga
[2021-02-08 20:28:13,310] [INFO    ]Se genera el dataframe reducido con columna basada en Suma_time_parada_h
[2021-02-08 20:28:13,536] [INFO    ]4.- Construir el grafo
[2021-02-08 20:29:45,771] [INFO    ]5.- Calculo rutas optimas
[2021-02-08 20:29:46,912] [INFO    ]La ruta optima es: ['Alicante Tren', 'punto_recarga_322', 'A Corunia Bus']
[2021-02-08 20:29:47,109] [INFO    ]Tiempo de parada en Alicante Tren es 0.0 h
[2021-02-08 20:29:47,110] [INFO    ]Tiempo total del tramo Alicante Tren - punto_recarga_322 es 3.277587142484951 h
[2021-02-08 20:29:47,308] [INFO    ]Tiempo de parada en punto_recarga_322 es 2.082317333469938 h
[2021-02-08 20:29:47,308] [INFO    ]Tiempo total del tramo punto_recarga_322 - A Corunia Bus es 6.688634005200486 h
[2021-02-08 20:29:47,308] [INFO    ]El tiempo total tardado es: 9.966221147685436 h
[2021-02-08 20:29:48,386] [INFO    ]6.- Carga de outputs a Base de Datos
[2021-02-08 20:29:48,386] [INFO    ]Crear conexion a DB
[2021-02-08 20:29:48,391] [INFO    ]Query a Output
[2021-02-08 20:29:48,439] [INFO    ]1 registros insertados.
[2021-02-08 20:29:48,439] [INFO    ]Cerrar conexion con DB
[2021-02-08 20:29:48,446] [INFO    ][OK] Final del script calcular_caminos_entre_puntos.py [OK]
[2021-02-08 20:29:48,714] [INFO    ]127.0.0.1 - - [08/Feb/2021 20:29:48] "[35m[1mPOST /Route HTTP/1.1[0m" 500 -
[2021-02-08 20:29:49,048] [INFO    ]127.0.0.1 - - [08/Feb/2021 20:29:49] "[37mGET /Route?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1[0m" 200 -
[2021-02-08 20:29:49,057] [INFO    ]127.0.0.1 - - [08/Feb/2021 20:29:49] "[37mGET /Route?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1[0m" 200 -
[2021-02-08 20:29:49,100] [INFO    ]127.0.0.1 - - [08/Feb/2021 20:29:49] "[37mGET /Route?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1[0m" 200 -
[2021-02-08 20:29:49,357] [INFO    ]127.0.0.1 - - [08/Feb/2021 20:29:49] "[37mGET /Route?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1[0m" 200 -
[2021-02-08 20:29:49,409] [INFO    ]127.0.0.1 - - [08/Feb/2021 20:29:49] "[37mGET /Route?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1[0m" 200 -
[2021-02-08 20:30:53,183] [INFO    ] * Detected change in '/home/tfm/Documentos/TFM/ElectricRoute/flask_auth_app_lucia_sql/project/main.py', reloading
[2021-02-08 20:50:50,960] [INFO    ][OK] Llamada al script calcular_caminos_entre_puntos.py [OK]
[2021-02-08 20:50:50,960] [INFO    ]El programa lanzado es: ALL TESLA ROADSTER Alicante Tren Burgos Tren 90 10  INFO /home/tfm/Documentos/TFM/ElectricRoute/flask_auth_app_lucia_sql/logs/
[2021-02-08 20:50:50,960] [INFO    ]1.- Carga de inputs desde Base de Datos
[2021-02-08 20:50:50,960] [INFO    ]Crear conexion a DB
[2021-02-08 20:50:50,963] [INFO    ]Query a PuntosCarga
[2021-02-08 20:50:50,994] [INFO    ]Query a GasolinerasPropuesta
[2021-02-08 20:50:51,027] [INFO    ]Query a Ciudades
[2021-02-08 20:50:51,035] [INFO    ]Query a ElectriCar
[2021-02-08 20:50:51,040] [INFO    ]Query a Matriz_distancia_haversine
[2021-02-08 20:51:05,335] [INFO    ]Query a Matriz_distancia_haversine completo
[2021-02-08 20:51:15,741] [INFO    ] * Detected change in '/home/tfm/Documentos/TFM/ElectricRoute/flask_auth_app_lucia_sql/project/main.py', reloading
[2021-02-08 21:11:47,032] [INFO    ][OK] Llamada al script calcular_caminos_entre_puntos.py [OK]
[2021-02-08 21:11:47,033] [INFO    ]El programa lanzado es: ALL TESLA ROADSTER Cadiz Bus Albacete Tren 90 10  INFO /home/tfm/Documentos/TFM/ElectricRoute/flask_auth_app_lucia_sql/logs/
[2021-02-08 21:11:47,034] [INFO    ]1.- Carga de inputs desde Base de Datos
[2021-02-08 21:11:47,034] [INFO    ]Crear conexion a DB
[2021-02-08 21:11:47,041] [INFO    ]Query a PuntosCarga
[2021-02-08 21:11:47,075] [INFO    ]Query a GasolinerasPropuesta
[2021-02-08 21:11:47,107] [INFO    ]Query a Ciudades
[2021-02-08 21:11:47,116] [INFO    ]Query a ElectriCar
[2021-02-08 21:11:47,120] [INFO    ]Query a Matriz_distancia_haversine
[2021-02-08 21:12:00,616] [INFO    ]Query a Matriz_distancia_haversine completo
[2021-02-08 21:12:18,523] [INFO    ]Cerrar conexion con DB
[2021-02-08 21:12:18,524] [INFO    ]2.- Aplicar las restricciones
[2021-02-08 21:12:18,524] [INFO    ]a) Si no se especifica tipo de conector, no se aplica restriccion
[2021-02-08 21:12:18,524] [INFO    ]b) Restriccion de primera parada
[2021-02-08 21:12:18,743] [INFO    ]c) Restriccion de ultima parada
[2021-02-08 21:12:18,945] [INFO    ]Se genera el dataframe reducido que cumple con todas las restricciones
[2021-02-08 21:12:20,031] [INFO    ]df_distancias (461204, 3)
[2021-02-08 21:12:20,032] [INFO    ]df_distancias_reduced (460916, 5)
[2021-02-08 21:12:20,032] [INFO    ]3.- Calcular tiempos (de recorrido y parada)
[2021-02-08 21:12:20,032] [INFO    ]a) Tiempo de recorrido
[2021-02-08 21:12:20,037] [INFO    ]b) Tiempo de parada
[2021-02-08 21:12:20,037] [INFO    ]Filtro las distancias menores o iguales de 50 km entre las CIUDADES IMPORTANTES y el resto de coordenadas
[2021-02-08 21:12:22,558] [INFO    ]Calculo tiempo de parada para puntos de recarga
[2021-02-08 21:12:22,669] [INFO    ]Se genera el dataframe reducido con columna basada en Suma_time_parada_h
[2021-02-08 21:12:22,873] [INFO    ]4.- Construir el grafo
[2021-02-08 21:13:47,092] [INFO    ]5.- Calculo rutas optimas
[2021-02-08 21:13:47,469] [INFO    ]La ruta optima es: ['Cadiz Bus', 'punto_recarga_69', 'Albacete Tren']
[2021-02-08 21:13:47,637] [INFO    ]Tiempo de parada en Cadiz Bus es 0.0 h
[2021-02-08 21:13:47,638] [INFO    ]Tiempo total del tramo Cadiz Bus - punto_recarga_69 es 4.4024903053752835 h
[2021-02-08 21:13:47,804] [INFO    ]Tiempo de parada en punto_recarga_69 es 0.0 h
[2021-02-08 21:13:47,805] [INFO    ]Tiempo total del tramo punto_recarga_69 - Albacete Tren es 1.1594697750221805 h
[2021-02-08 21:13:47,805] [INFO    ]El tiempo total tardado es: 5.561960080397464 h
[2021-02-08 21:13:48,186] [INFO    ]6.- Carga de outputs a Base de Datos
[2021-02-08 21:13:48,187] [INFO    ]Crear conexion a DB
[2021-02-08 21:13:48,193] [INFO    ]Query a Output
[2021-02-08 21:13:48,269] [INFO    ]1 registros insertados.
[2021-02-08 21:13:48,269] [INFO    ]Cerrar conexion con DB
[2021-02-08 21:13:48,269] [INFO    ][OK] Final del script calcular_caminos_entre_puntos.py [OK]
[2021-02-08 21:13:48,472] [INFO    ]127.0.0.1 - - [08/Feb/2021 21:13:48] "[37mPOST /Route HTTP/1.1[0m" 200 -
